// Code generated by avro/gen. DO NOT EDIT.
package events

import (
	"time"

	"github.com/hamba/avro/v2"
)

// AddedCommentEvent is a generated struct.
type AddedCommentEvent struct {
	UserID    string    `avro:"user_id"`
	PostID    string    `avro:"post_id"`
	CommentID string    `avro:"comment_id"`
	CreatedAt time.Time `avro:"created_at"`
}

var schemaAddedCommentEvent = avro.MustParse(`{"name":"com.example.events.AddedCommentEvent","type":"record","fields":[{"name":"user_id","type":"string"},{"name":"post_id","type":"string"},{"name":"comment_id","type":"string"},{"name":"created_at","type":{"type":"long","logicalType":"timestamp-millis"}}]}`)

// Schema returns the schema for AddedCommentEvent.
func (o *AddedCommentEvent) Schema() avro.Schema {
	return schemaAddedCommentEvent
}

// Unmarshal decodes b into the receiver.
func (o *AddedCommentEvent) Unmarshal(b []byte) error {
	return avro.Unmarshal(o.Schema(), b, o)
}

// Marshal encodes the receiver.
func (o *AddedCommentEvent) Marshal() ([]byte, error) {
	return avro.Marshal(o.Schema(), o)
}
